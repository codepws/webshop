// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.0
// source: goods/goods.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//商品列表请求
type CategoryListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Level int32 `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *CategoryListRequest) Reset() {
	*x = CategoryListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_goods_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryListRequest) ProtoMessage() {}

func (x *CategoryListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_goods_goods_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryListRequest.ProtoReflect.Descriptor instead.
func (*CategoryListRequest) Descriptor() ([]byte, []int) {
	return file_goods_goods_proto_rawDescGZIP(), []int{0}
}

func (x *CategoryListRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CategoryListRequest) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

//响应：商品分类信息
type CategoryInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ParentCategory uint32 `protobuf:"varint,3,opt,name=parentCategory,proto3" json:"parentCategory,omitempty"`
	Level          uint32 `protobuf:"varint,4,opt,name=level,proto3" json:"level,omitempty"`
	IsTab          bool   `protobuf:"varint,5,opt,name=isTab,proto3" json:"isTab,omitempty"`
}

func (x *CategoryInfoResponse) Reset() {
	*x = CategoryInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_goods_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryInfoResponse) ProtoMessage() {}

func (x *CategoryInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_goods_goods_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryInfoResponse.ProtoReflect.Descriptor instead.
func (*CategoryInfoResponse) Descriptor() ([]byte, []int) {
	return file_goods_goods_proto_rawDescGZIP(), []int{1}
}

func (x *CategoryInfoResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CategoryInfoResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CategoryInfoResponse) GetParentCategory() uint32 {
	if x != nil {
		return x.ParentCategory
	}
	return 0
}

func (x *CategoryInfoResponse) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *CategoryInfoResponse) GetIsTab() bool {
	if x != nil {
		return x.IsTab
	}
	return false
}

//响应：商品分类列表
type CategoryListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total    int32                   `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Data     []*CategoryInfoResponse `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	JsonData string                  `protobuf:"bytes,3,opt,name=jsonData,proto3" json:"jsonData,omitempty"`
}

func (x *CategoryListResponse) Reset() {
	*x = CategoryListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_goods_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryListResponse) ProtoMessage() {}

func (x *CategoryListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_goods_goods_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryListResponse.ProtoReflect.Descriptor instead.
func (*CategoryListResponse) Descriptor() ([]byte, []int) {
	return file_goods_goods_proto_rawDescGZIP(), []int{2}
}

func (x *CategoryListResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *CategoryListResponse) GetData() []*CategoryInfoResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CategoryListResponse) GetJsonData() string {
	if x != nil {
		return x.JsonData
	}
	return ""
}

//响应：商品子分类列表
type SubCategoryListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total        int32                   `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Info         *CategoryInfoResponse   `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	SubCategorys []*CategoryInfoResponse `protobuf:"bytes,3,rep,name=subCategorys,proto3" json:"subCategorys,omitempty"`
}

func (x *SubCategoryListResponse) Reset() {
	*x = SubCategoryListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_goods_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubCategoryListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubCategoryListResponse) ProtoMessage() {}

func (x *SubCategoryListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_goods_goods_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubCategoryListResponse.ProtoReflect.Descriptor instead.
func (*SubCategoryListResponse) Descriptor() ([]byte, []int) {
	return file_goods_goods_proto_rawDescGZIP(), []int{3}
}

func (x *SubCategoryListResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SubCategoryListResponse) GetInfo() *CategoryInfoResponse {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *SubCategoryListResponse) GetSubCategorys() []*CategoryInfoResponse {
	if x != nil {
		return x.SubCategorys
	}
	return nil
}

//响应：商品类别简介
type CategoryBriefInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CategoryBriefInfoResponse) Reset() {
	*x = CategoryBriefInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_goods_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryBriefInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryBriefInfoResponse) ProtoMessage() {}

func (x *CategoryBriefInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_goods_goods_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryBriefInfoResponse.ProtoReflect.Descriptor instead.
func (*CategoryBriefInfoResponse) Descriptor() ([]byte, []int) {
	return file_goods_goods_proto_rawDescGZIP(), []int{4}
}

func (x *CategoryBriefInfoResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CategoryBriefInfoResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

//响应：品牌信息
type BrandInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Logo string `protobuf:"bytes,3,opt,name=logo,proto3" json:"logo,omitempty"`
}

func (x *BrandInfoResponse) Reset() {
	*x = BrandInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_goods_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrandInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrandInfoResponse) ProtoMessage() {}

func (x *BrandInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_goods_goods_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrandInfoResponse.ProtoReflect.Descriptor instead.
func (*BrandInfoResponse) Descriptor() ([]byte, []int) {
	return file_goods_goods_proto_rawDescGZIP(), []int{5}
}

func (x *BrandInfoResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BrandInfoResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BrandInfoResponse) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

// 基于品类与品牌之间的多对多关系，互相查询 可根据品牌查询对应品类或者根据品类查询品牌
type BrandCategoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint32                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Brand    *BrandInfoResponse    `protobuf:"bytes,2,opt,name=brand,proto3" json:"brand,omitempty"`
	Category *CategoryInfoResponse `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
}

func (x *BrandCategoryResponse) Reset() {
	*x = BrandCategoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_goods_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrandCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrandCategoryResponse) ProtoMessage() {}

func (x *BrandCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_goods_goods_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrandCategoryResponse.ProtoReflect.Descriptor instead.
func (*BrandCategoryResponse) Descriptor() ([]byte, []int) {
	return file_goods_goods_proto_rawDescGZIP(), []int{6}
}

func (x *BrandCategoryResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BrandCategoryResponse) GetBrand() *BrandInfoResponse {
	if x != nil {
		return x.Brand
	}
	return nil
}

func (x *BrandCategoryResponse) GetCategory() *CategoryInfoResponse {
	if x != nil {
		return x.Category
	}
	return nil
}

//请求：批量获取商品信息列表
type GoodsInfoByIdsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []uint32 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *GoodsInfoByIdsRequest) Reset() {
	*x = GoodsInfoByIdsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_goods_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsInfoByIdsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsInfoByIdsRequest) ProtoMessage() {}

func (x *GoodsInfoByIdsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_goods_goods_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsInfoByIdsRequest.ProtoReflect.Descriptor instead.
func (*GoodsInfoByIdsRequest) Descriptor() ([]byte, []int) {
	return file_goods_goods_proto_rawDescGZIP(), []int{7}
}

func (x *GoodsInfoByIdsRequest) GetIds() []uint32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

//请求：指定ID商品详细信息
type GoodInfoByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GoodInfoByIdRequest) Reset() {
	*x = GoodInfoByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_goods_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodInfoByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodInfoByIdRequest) ProtoMessage() {}

func (x *GoodInfoByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_goods_goods_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodInfoByIdRequest.ProtoReflect.Descriptor instead.
func (*GoodInfoByIdRequest) Descriptor() ([]byte, []int) {
	return file_goods_goods_proto_rawDescGZIP(), []int{8}
}

func (x *GoodInfoByIdRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

//响应：商品信息列表
type GoodsListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32               `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Data  []*GoodsInfoResponse `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GoodsListResponse) Reset() {
	*x = GoodsListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_goods_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsListResponse) ProtoMessage() {}

func (x *GoodsListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_goods_goods_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsListResponse.ProtoReflect.Descriptor instead.
func (*GoodsListResponse) Descriptor() ([]byte, []int) {
	return file_goods_goods_proto_rawDescGZIP(), []int{9}
}

func (x *GoodsListResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GoodsListResponse) GetData() []*GoodsInfoResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

//响应：商品详细信息
type GoodsInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              uint32                     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CategoryId      uint32                     `protobuf:"varint,2,opt,name=categoryId,proto3" json:"categoryId,omitempty"`
	Name            string                     `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	GoodsSn         string                     `protobuf:"bytes,4,opt,name=goodsSn,proto3" json:"goodsSn,omitempty"`
	ClickNum        uint32                     `protobuf:"varint,5,opt,name=clickNum,proto3" json:"clickNum,omitempty"`
	SoldNum         uint32                     `protobuf:"varint,6,opt,name=soldNum,proto3" json:"soldNum,omitempty"`
	FavNum          uint32                     `protobuf:"varint,7,opt,name=favNum,proto3" json:"favNum,omitempty"`
	MarketPrice     float64                    `protobuf:"fixed64,9,opt,name=marketPrice,proto3" json:"marketPrice,omitempty"`
	ShopPrice       float64                    `protobuf:"fixed64,10,opt,name=shopPrice,proto3" json:"shopPrice,omitempty"`
	GoodsBrief      string                     `protobuf:"bytes,11,opt,name=goodsBrief,proto3" json:"goodsBrief,omitempty"`
	GoodsDesc       string                     `protobuf:"bytes,12,opt,name=goodsDesc,proto3" json:"goodsDesc,omitempty"`
	ShipFree        bool                       `protobuf:"varint,13,opt,name=shipFree,proto3" json:"shipFree,omitempty"`
	Images          []string                   `protobuf:"bytes,14,rep,name=images,proto3" json:"images,omitempty"`
	DescImages      []string                   `protobuf:"bytes,15,rep,name=descImages,proto3" json:"descImages,omitempty"`
	GoodsFrontImage string                     `protobuf:"bytes,16,opt,name=goodsFrontImage,proto3" json:"goodsFrontImage,omitempty"`
	IsNew           bool                       `protobuf:"varint,17,opt,name=isNew,proto3" json:"isNew,omitempty"`
	IsHot           bool                       `protobuf:"varint,18,opt,name=isHot,proto3" json:"isHot,omitempty"`
	ForSale         bool                       `protobuf:"varint,19,opt,name=forSale,proto3" json:"forSale,omitempty"`
	AddTime         uint64                     `protobuf:"varint,20,opt,name=addTime,proto3" json:"addTime,omitempty"`
	Category        *CategoryBriefInfoResponse `protobuf:"bytes,21,opt,name=category,proto3" json:"category,omitempty"`
	Brand           *BrandInfoResponse         `protobuf:"bytes,22,opt,name=brand,proto3" json:"brand,omitempty"`
}

func (x *GoodsInfoResponse) Reset() {
	*x = GoodsInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goods_goods_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsInfoResponse) ProtoMessage() {}

func (x *GoodsInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_goods_goods_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsInfoResponse.ProtoReflect.Descriptor instead.
func (*GoodsInfoResponse) Descriptor() ([]byte, []int) {
	return file_goods_goods_proto_rawDescGZIP(), []int{10}
}

func (x *GoodsInfoResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GoodsInfoResponse) GetCategoryId() uint32 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *GoodsInfoResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GoodsInfoResponse) GetGoodsSn() string {
	if x != nil {
		return x.GoodsSn
	}
	return ""
}

func (x *GoodsInfoResponse) GetClickNum() uint32 {
	if x != nil {
		return x.ClickNum
	}
	return 0
}

func (x *GoodsInfoResponse) GetSoldNum() uint32 {
	if x != nil {
		return x.SoldNum
	}
	return 0
}

func (x *GoodsInfoResponse) GetFavNum() uint32 {
	if x != nil {
		return x.FavNum
	}
	return 0
}

func (x *GoodsInfoResponse) GetMarketPrice() float64 {
	if x != nil {
		return x.MarketPrice
	}
	return 0
}

func (x *GoodsInfoResponse) GetShopPrice() float64 {
	if x != nil {
		return x.ShopPrice
	}
	return 0
}

func (x *GoodsInfoResponse) GetGoodsBrief() string {
	if x != nil {
		return x.GoodsBrief
	}
	return ""
}

func (x *GoodsInfoResponse) GetGoodsDesc() string {
	if x != nil {
		return x.GoodsDesc
	}
	return ""
}

func (x *GoodsInfoResponse) GetShipFree() bool {
	if x != nil {
		return x.ShipFree
	}
	return false
}

func (x *GoodsInfoResponse) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *GoodsInfoResponse) GetDescImages() []string {
	if x != nil {
		return x.DescImages
	}
	return nil
}

func (x *GoodsInfoResponse) GetGoodsFrontImage() string {
	if x != nil {
		return x.GoodsFrontImage
	}
	return ""
}

func (x *GoodsInfoResponse) GetIsNew() bool {
	if x != nil {
		return x.IsNew
	}
	return false
}

func (x *GoodsInfoResponse) GetIsHot() bool {
	if x != nil {
		return x.IsHot
	}
	return false
}

func (x *GoodsInfoResponse) GetForSale() bool {
	if x != nil {
		return x.ForSale
	}
	return false
}

func (x *GoodsInfoResponse) GetAddTime() uint64 {
	if x != nil {
		return x.AddTime
	}
	return 0
}

func (x *GoodsInfoResponse) GetCategory() *CategoryBriefInfoResponse {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *GoodsInfoResponse) GetBrand() *BrandInfoResponse {
	if x != nil {
		return x.Brand
	}
	return nil
}

var File_goods_goods_proto protoreflect.FileDescriptor

var file_goods_goods_proto_rawDesc = []byte{
	0x0a, 0x11, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x3b, 0x0a, 0x13, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x8e, 0x01,
	0x0a, 0x14, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x54, 0x61,
	0x62, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x54, 0x61, 0x62, 0x22, 0x73,
	0x0a, 0x14, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x29, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x22, 0x95, 0x01, 0x0a, 0x17, 0x53, 0x75, 0x62, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x29, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x12, 0x39, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x73,
	0x75, 0x62, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x73, 0x22, 0x3f, 0x0a, 0x19, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x42, 0x72, 0x69, 0x65, 0x66, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4b, 0x0a, 0x11,
	0x42, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x22, 0x84, 0x01, 0x0a, 0x15, 0x42, 0x72,
	0x61, 0x6e, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x31, 0x0a,
	0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x22, 0x29, 0x0a, 0x15, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x49,
	0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x25, 0x0a, 0x13, 0x47,
	0x6f, 0x6f, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x51, 0x0a, 0x11, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x26, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xfd, 0x04, 0x0a, 0x11, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69,
	0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x6c, 0x69,
	0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x6c, 0x64, 0x4e, 0x75, 0x6d,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x6f, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x12,
	0x16, 0x0a, 0x06, 0x66, 0x61, 0x76, 0x4e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x66, 0x61, 0x76, 0x4e, 0x75, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x68, 0x6f,
	0x70, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x73, 0x68,
	0x6f, 0x70, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x42, 0x72, 0x69, 0x65, 0x66, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x42, 0x72, 0x69, 0x65, 0x66, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x44, 0x65, 0x73, 0x63, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x68, 0x69, 0x70, 0x46, 0x72, 0x65,
	0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x73, 0x68, 0x69, 0x70, 0x46, 0x72, 0x65,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x73,
	0x63, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x64,
	0x65, 0x73, 0x63, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x48,
	0x6f, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x48, 0x6f, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x66, 0x6f, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x66, 0x6f, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x61, 0x64, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x42, 0x72, 0x69, 0x65, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x62,
	0x72, 0x61, 0x6e, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05,
	0x62, 0x72, 0x61, 0x6e, 0x64, 0x32, 0xce, 0x01, 0x0a, 0x05, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x12,
	0x44, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x15,
	0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x64,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x49, 0x64, 0x73, 0x12, 0x16, 0x2e, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x12, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x49, 0x64, 0x12, 0x14, 0x2e, 0x47,
	0x6f, 0x6f, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x12, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_goods_goods_proto_rawDescOnce sync.Once
	file_goods_goods_proto_rawDescData = file_goods_goods_proto_rawDesc
)

func file_goods_goods_proto_rawDescGZIP() []byte {
	file_goods_goods_proto_rawDescOnce.Do(func() {
		file_goods_goods_proto_rawDescData = protoimpl.X.CompressGZIP(file_goods_goods_proto_rawDescData)
	})
	return file_goods_goods_proto_rawDescData
}

var file_goods_goods_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_goods_goods_proto_goTypes = []interface{}{
	(*CategoryListRequest)(nil),       // 0: CategoryListRequest
	(*CategoryInfoResponse)(nil),      // 1: CategoryInfoResponse
	(*CategoryListResponse)(nil),      // 2: CategoryListResponse
	(*SubCategoryListResponse)(nil),   // 3: SubCategoryListResponse
	(*CategoryBriefInfoResponse)(nil), // 4: CategoryBriefInfoResponse
	(*BrandInfoResponse)(nil),         // 5: BrandInfoResponse
	(*BrandCategoryResponse)(nil),     // 6: BrandCategoryResponse
	(*GoodsInfoByIdsRequest)(nil),     // 7: GoodsInfoByIdsRequest
	(*GoodInfoByIdRequest)(nil),       // 8: GoodInfoByIdRequest
	(*GoodsListResponse)(nil),         // 9: GoodsListResponse
	(*GoodsInfoResponse)(nil),         // 10: GoodsInfoResponse
	(*emptypb.Empty)(nil),             // 11: google.protobuf.Empty
}
var file_goods_goods_proto_depIdxs = []int32{
	1,  // 0: CategoryListResponse.data:type_name -> CategoryInfoResponse
	1,  // 1: SubCategoryListResponse.info:type_name -> CategoryInfoResponse
	1,  // 2: SubCategoryListResponse.subCategorys:type_name -> CategoryInfoResponse
	5,  // 3: BrandCategoryResponse.brand:type_name -> BrandInfoResponse
	1,  // 4: BrandCategoryResponse.category:type_name -> CategoryInfoResponse
	10, // 5: GoodsListResponse.data:type_name -> GoodsInfoResponse
	4,  // 6: GoodsInfoResponse.category:type_name -> CategoryBriefInfoResponse
	5,  // 7: GoodsInfoResponse.brand:type_name -> BrandInfoResponse
	11, // 8: Goods.GetAllCategorysList:input_type -> google.protobuf.Empty
	7,  // 9: Goods.GetGoodsListByIds:input_type -> GoodsInfoByIdsRequest
	8,  // 10: Goods.GetGoodsDetailById:input_type -> GoodInfoByIdRequest
	2,  // 11: Goods.GetAllCategorysList:output_type -> CategoryListResponse
	9,  // 12: Goods.GetGoodsListByIds:output_type -> GoodsListResponse
	10, // 13: Goods.GetGoodsDetailById:output_type -> GoodsInfoResponse
	11, // [11:14] is the sub-list for method output_type
	8,  // [8:11] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_goods_goods_proto_init() }
func file_goods_goods_proto_init() {
	if File_goods_goods_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_goods_goods_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_goods_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_goods_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_goods_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubCategoryListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_goods_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryBriefInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_goods_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrandInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_goods_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrandCategoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_goods_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsInfoByIdsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_goods_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodInfoByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_goods_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goods_goods_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_goods_goods_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_goods_goods_proto_goTypes,
		DependencyIndexes: file_goods_goods_proto_depIdxs,
		MessageInfos:      file_goods_goods_proto_msgTypes,
	}.Build()
	File_goods_goods_proto = out.File
	file_goods_goods_proto_rawDesc = nil
	file_goods_goods_proto_goTypes = nil
	file_goods_goods_proto_depIdxs = nil
}
